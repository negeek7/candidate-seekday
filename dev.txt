    ~~~ Working Structure ~~~

Tech Stack:
// ReactJs
// Redux
// CSS (Vanilla CSS is preferred)
// Material UI
// Please note that creating your logic for any other logic-related change is a better implementation than using 3rd party libraries
 
// Mark Done -> ~~ DONE

1. Job Cards (Fetch data from the API) 
    1.1 Job Card Component ~~ DONE
    1.2 View Job / Show More functionality ~~ DONE
        1.2.1 Modal for View Job ~~ DONE
        1.2.2 Faded Text from below ~~ DONE
    1.3 CTA components ~~ DONE



2. Filters
    2.1 UI Logic
    2.2 Data Logic
        // Accept multiple filter values on single filter (like 'Roles') and update data accordingly
        // To filter incoming data (new api call) on filter, if filter is applied
        // 


3. Infinite Scrolling
    3.1 fetch initial data from API and store it to Redux
    3.2 Show it to UI
    3.3 Use observer to when screen hits the bottom -> call second API
    3.4 Append the data to the Redux state and show it to UI
    3.5 Repeat from -- 3.3

    Question:
    // Is Redux ideal to hold and store data, whats the alternative?
    // how much data can it hold
    // will it slow down the website as data gets bigger (scalability)

